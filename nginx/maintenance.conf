# Generated maintenance include. Mounted to /etc/nginx/conf.d/maintenance.conf
# Toggle via env var or by editing this file inside the container and nginx -s reload.

## Maintenance mode mapping based on switch variable set in per-server context (mode.conf)
## $maintenance_switch will be set to 'on' or 'off' (default empty -> off)
map $maintenance_switch $maintenance_mode {
	default off;
	on      on;
	off     off;
}

# Exempt paths (use normalized $uri so query strings do not break matches):
# - /dev and /dev/* (frontend dev tooling)
# - /api/webhooks/* (third-party callbacks)
# - /api/health (uptime probes)
# - /api/dev/maintenance-status (status probe)
# - /api/dev/maintenance (frontend overlay polling)
# - /api/dev/toggle-nginx-maint (control)
map $uri $is_maint_exempt {
	# 0 = NOT exempt (will get maintenance when mode ON)
	# 1 = exempt (always allowed)
	default 0;
	# Allow ONLY developer & control endpoints while in maintenance:
	# Frontend developer pages under /dev and backend/overlay APIs under /api/dev/
	~^/dev(?:/|$)              1;
	~^/api/dev/                1;
	/login                     1;
	# Auth/session endpoints needed for developer login during maintenance
	~^/api/auth/login$         1;
	~^/api/auth/sync$          1;
	~^/api/auth/logout$        1;
	~^/api/me$                 1;
	# Needed assets during maintenance (favicon) & profile fetch for dev UI
	/favicon.ico               1;
	/api/users/profile-with-currency 1;
	# Always allow the internal maintenance page resource itself to avoid recursion
	/maintenance.html          1;
}
