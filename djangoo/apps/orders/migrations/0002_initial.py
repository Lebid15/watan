# Generated by Django 5.0.7 on 2025-10-10 17:18

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('orders', '0001_add_provider_referans'),
    ]

    operations = [
        migrations.CreateModel(
            name='LegacyUser',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('tenant_id', models.UUIDField(db_column='tenantId', db_index=True, null=True)),
                ('email', models.CharField(max_length=255)),
                ('username', models.CharField(max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Legacy User (Old Backend)',
                'verbose_name_plural': 'Legacy Users (Old Backend - DO NOT USE)',
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, null=True)),
            ],
            options={
                'db_table': 'product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductOrder',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('tenant_id', models.UUIDField(db_column='tenantId', db_index=True, null=True)),
                ('order_no', models.IntegerField(db_column='orderNo', null=True)),
                ('status', models.CharField(default='pending', max_length=50)),
                ('quantity', models.IntegerField(default=1)),
                ('sell_price_currency', models.CharField(db_column='sellPriceCurrency', default='USD', max_length=10)),
                ('sell_price_amount', models.DecimalField(db_column='sellPriceAmount', decimal_places=2, default=0, max_digits=12)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('created_at', models.DateTimeField(db_column='createdAt')),
                ('user_identifier', models.CharField(db_column='userIdentifier', max_length=255, null=True)),
                ('extra_field', models.CharField(db_column='extraField', max_length=255, null=True)),
                ('provider_id', models.CharField(db_column='providerId', max_length=255, null=True)),
                ('external_order_id', models.CharField(db_column='externalOrderId', max_length=255, null=True)),
                ('provider_message', models.TextField(db_column='providerMessage', null=True)),
                ('last_message', models.CharField(db_column='lastMessage', max_length=250, null=True)),
                ('manual_note', models.TextField(db_column='manualNote', null=True)),
                ('notes', models.JSONField(db_column='notes', null=True)),
                ('pin_code', models.CharField(db_column='pinCode', max_length=120, null=True)),
                ('external_status', models.CharField(db_column='externalStatus', default='not_sent', max_length=30)),
                ('sent_at', models.DateTimeField(db_column='sentAt', null=True)),
                ('completed_at', models.DateTimeField(db_column='completedAt', null=True)),
                ('duration_ms', models.IntegerField(db_column='durationMs', null=True)),
                ('last_sync_at', models.DateTimeField(db_column='lastSyncAt', null=True)),
                ('fx_locked', models.BooleanField(db_column='fxLocked', default=False)),
                ('fx_usd_try_at_approval', models.DecimalField(db_column='fxUsdTryAtApproval', decimal_places=6, max_digits=12, null=True)),
                ('sell_try_at_approval', models.DecimalField(db_column='sellTryAtApproval', decimal_places=2, max_digits=12, null=True)),
                ('cost_try_at_approval', models.DecimalField(db_column='costTryAtApproval', decimal_places=2, max_digits=12, null=True)),
                ('profit_try_at_approval', models.DecimalField(db_column='profitTryAtApproval', decimal_places=2, max_digits=12, null=True)),
                ('profit_usd_at_approval', models.DecimalField(db_column='profitUsdAtApproval', decimal_places=2, max_digits=12, null=True)),
                ('fx_captured_at', models.DateTimeField(db_column='fxCapturedAt', null=True)),
                ('approved_at', models.DateTimeField(db_column='approvedAt', null=True)),
                ('approved_local_date', models.DateField(db_column='approvedLocalDate', null=True)),
                ('approved_local_month', models.CharField(db_column='approvedLocalMonth', max_length=7, null=True)),
                ('notes_count', models.IntegerField(db_column='notesCount', default=0)),
                ('provider_referans', models.CharField(db_column='provider_referans', max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Legacy Product Order (Old Backend)',
                'verbose_name_plural': 'Legacy Product Orders (Old Backend - DO NOT USE)',
                'db_table': 'product_orders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductPackage',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, null=True)),
                ('product_id', models.UUIDField(db_column='product_id', null=True)),
            ],
            options={
                'db_table': 'product_packages',
                'managed': False,
            },
        ),
    ]
