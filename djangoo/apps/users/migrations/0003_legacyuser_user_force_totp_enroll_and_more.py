# Generated by Django 5.0.7 on 2025-09-25 14:47

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0002_alter_user_groups_alter_user_user_permissions'),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.CreateModel(
                    name='LegacyUser',
                    fields=[
                        ('id', models.UUIDField(primary_key=True, serialize=False)),
                        ('tenant_id', models.UUIDField(db_column='tenantId', db_index=True, null=True)),
                        ('email', models.CharField(max_length=255)),
                        ('password', models.CharField(max_length=255)),
                        ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                        ('role', models.CharField(max_length=50, null=True)),
                        ('username', models.CharField(max_length=255, null=True)),
                        ('is_active', models.BooleanField(db_column='isActive', default=True)),
                        ('overdraft_limit', models.DecimalField(db_column='overdraftLimit', decimal_places=2, default=0, max_digits=12)),
                        ('price_group_id', models.UUIDField(db_column='price_group_id', null=True)),
                        ('preferred_currency_code', models.CharField(db_column='preferredCurrencyCode', max_length=10, null=True)),
                    ],
                    options={
                        'db_table': 'users',
                        'managed': False,
                    },
                ),
            ],
            database_operations=[],
        ),
        migrations.AddField(
            model_name='user',
            name='force_totp_enroll',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='user',
            name='totp_failed_attempts',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='user',
            name='totp_locked_until',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.CreateModel(
                    name='RecoveryCode',
                    fields=[
                        ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                        ('code_hash', models.CharField(max_length=200)),
                        ('created_at', models.DateTimeField(auto_now_add=True)),
                        ('used_at', models.DateTimeField(blank=True, null=True)),
                        ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='totp_recovery_codes', to=settings.AUTH_USER_MODEL)),
                    ],
                    options={
                        'db_table': 'dj_recovery_codes',
                        'indexes': [models.Index(fields=['user'], name='dj_recovery_user_idx')],
                    },
                ),
            ],
            database_operations=[],
        ),
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.CreateModel(
                    name='TotpCredential',
                    fields=[
                        ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                        ('tenant_id', models.UUIDField(blank=True, null=True)),
                        ('encrypted_secret', models.CharField(max_length=200)),
                        ('label', models.CharField(blank=True, max_length=100, null=True)),
                        ('is_active', models.BooleanField(default=False)),
                        ('created_at', models.DateTimeField(auto_now_add=True)),
                        ('last_used_at', models.DateTimeField(blank=True, null=True)),
                        ('usage_count', models.PositiveIntegerField(default=0)),
                        ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='totp_credentials', to=settings.AUTH_USER_MODEL)),
                    ],
                    options={
                        'db_table': 'dj_totp_credentials',
                        'indexes': [models.Index(fields=['user'], name='dj_totp_user_idx'), models.Index(fields=['tenant_id', 'user'], name='dj_totp_tenant_user_idx')],
                    },
                ),
            ],
            database_operations=[],
        ),
    ]
