#### API server block
server {
    listen 80;
    listen [::]:80;
    server_name api.syrz1.com;

    # Basic health (internal use)
    location = /nginx-healthz {
        add_header Content-Type text/plain;
        return 200 'ok';
    }

    # Redirect bare / on api subdomain to docs
    location = / { return 302 /api/docs; }

    # Proxy all /api/ requests to backend (Nest listens on 3000 with global /api prefix)
    location ^~ /api/ {
        proxy_pass http://backend:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Block unexpected other paths explicitly (optional – helps surface config mistakes)
    location / { return 404; }
}

#### Frontend (Next.js) server block
server {
    listen 80;
    listen [::]:80;
    server_name syrz1.com www.syrz1.com;

    # Health endpoint for external monitor (kept lightweight)
    location = /nginx-healthz {
        add_header Content-Type text/plain;
        return 200 'ok';
    }

    # Everything to Next.js frontend
    location / {
    # حل DNS ديناميكي: يمنع تثبيت IP قديم عند إعادة إنشاء الحاوية
    resolver 127.0.0.11 ipv6=off;
    set $fe_upstream frontend:3001;
    proxy_pass http://$fe_upstream;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}