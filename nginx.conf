error_log /var/log/nginx/error.log warn;

upstream frontend_upstream {
    server frontend:3001;
    keepalive 8;
}

# HTTP -> HTTPS frontend
server {
    listen 80;
    listen [::]:80;
    server_name syrz1.com www.syrz1.com;
    location = /nginx-healthz { add_header Content-Type text/plain; return 200 'ok'; }
    location /.well-known/acme-challenge/ { root /var/www/html; }
    location / { return 301 https://$host$request_uri; }
}

# HTTP -> HTTPS api
server {
    listen 80;
    listen [::]:80;
    server_name api.syrz1.com;
    location = /nginx-healthz { add_header Content-Type text/plain; return 200 'ok'; }
    location / { return 301 https://$host$request_uri; }
}

# API HTTPS
server {
    listen 443 ssl;          # كان: listen 443 ssl http2;
    listen [::]:443 ssl;     # كان: listen [::]:443 ssl http2;
    http2 on;

    server_name api.syrz1.com;

    ssl_certificate     /etc/nginx/certs/origin.pem;
    ssl_certificate_key /etc/nginx/certs/origin.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    location = /nginx-healthz { add_header Content-Type text/plain; return 200 'ok'; }

    location ^~ /api/ {
        # --- CORS (Nginx authoritative) ---
        # Hide upstream CORS to avoid duplication
        proxy_hide_header Access-Control-Allow-Origin;
        proxy_hide_header Access-Control-Allow-Credentials;
        proxy_hide_header Access-Control-Allow-Headers;
        proxy_hide_header Access-Control-Allow-Methods;
        proxy_hide_header Vary;

        # Emit single canonical CORS headers
        add_header Access-Control-Allow-Origin https://syrz1.com always;
        add_header Access-Control-Allow-Credentials true always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Tenant-Host, X-Tenant-Id" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
        add_header Vary Origin always;

        # Preflight short-circuit
        if ($request_method = OPTIONS) { return 204; }

        # Upstream proxy
        proxy_pass http://backend:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 5s;
        proxy_read_timeout 60s;

        # (اختياري) تمرير Origin للأبستريم إذا كنت تحتاجه هناك
        proxy_set_header Origin $http_origin;
    }

    location / { return 404; }
}

# Frontend HTTPS
server {
    listen 443 ssl;          # كان: listen 443 ssl http2;
    listen [::]:443 ssl;     # كان: listen [::]:443 ssl http2;
    http2 on;

    server_name syrz1.com www.syrz1.com;

    ssl_certificate     /etc/nginx/certs/origin.pem;
    ssl_certificate_key /etc/nginx/certs/origin.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    location = /nginx-healthz { add_header Content-Type text/plain; return 200 'ok'; }

    location / {
        proxy_pass http://frontend_upstream;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 5s;
        proxy_read_timeout 60s;
    }
}
