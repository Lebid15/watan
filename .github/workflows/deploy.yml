name: Deploy to syr1-vps

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    env:
      VPS_HOST: ${{ secrets.VPS_HOST }}
      VPS_USER: ${{ secrets.VPS_USER }}
      DEPLOY_DIR: /root/watan
      RUN_MIGRATIONS: "false"

    steps:
      # 0) Checkout repo
      - name: Checkout code
        uses: actions/checkout@v4

      # 1) Setup SSH
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

      # 2) Push code to server
      - name: Deploy code to server
        run: |
          ssh -o StrictHostKeyChecking=no $VPS_USER@$VPS_HOST "\
            cd $DEPLOY_DIR && \
            git fetch --all && \
            git reset --hard origin/main"

      # 3) Build containers
      - name: Build containers
        run: |
          ssh -o StrictHostKeyChecking=no $VPS_USER@$VPS_HOST "\
            cd $DEPLOY_DIR && \
            docker compose build frontend backend"

      # 4) Restart containers
      - name: Restart containers
        run: |
          ssh -o StrictHostKeyChecking=no $VPS_USER@$VPS_HOST "\
            cd $DEPLOY_DIR && \
            docker compose up -d"

      # 5) Wait for backend healthy
      - name: Wait for backend healthy
        run: |
          ssh -o StrictHostKeyChecking=no $VPS_USER@$VPS_HOST "\
            cd $DEPLOY_DIR && \
            docker compose ps && \
            i=0; until docker compose ps backend | grep -q '(healthy)'; do \
              if [ $i -gt 30 ]; then echo 'backend not healthy'; exit 1; fi; \
              echo 'waiting backend...'; sleep 5; i=$((i+1)); \
            done"

      # 6) Verify tenants inside server container
      - name: Verify tenants on server
        run: |
          ssh -o StrictHostKeyChecking=no $VPS_USER@$VPS_HOST "\
            cd $DEPLOY_DIR && \
            docker compose exec -T backend node dist/scripts/verify-tenants.js

            docker compose exec -T backend node dist/scripts/tenant-verify.js"
