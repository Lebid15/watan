{
  "openapi": "3.0.0",
  "paths": {
    "/api/health": {
      "get": {
        "operationId": "HealthController_health",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Health"
        ]
      }
    },
    "/api/ready": {
      "get": {
        "operationId": "HealthController_ready",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Health"
        ]
      }
    },
    "/api/metrics": {
      "get": {
        "operationId": "MetricsController_metrics",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Metrics"
        ]
      }
    },
    "/api/admin/pending-orders-count": {
      "get": {
        "operationId": "AdminCountsController_pendingOrders",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "AdminCounts"
        ]
      }
    },
    "/api/admin/pending-deposits-count": {
      "get": {
        "operationId": "AdminCountsController_pendingDeposits",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "AdminCounts"
        ]
      }
    },
    "/api/dev/notes/public/latest": {
      "get": {
        "operationId": "DeveloperNotesController_publicLatest",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "DeveloperNotes"
        ]
      }
    },
    "/api/dev/notes/latest": {
      "get": {
        "operationId": "DeveloperNotesController_latest",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "DeveloperNotes"
        ]
      }
    },
    "/api/dev/notes": {
      "post": {
        "operationId": "DeveloperNotesController_set",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "DeveloperNotes"
        ]
      }
    },
    "/api/users/register": {
      "post": {
        "operationId": "UserController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Register a new user",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/profile": {
      "get": {
        "operationId": "UserController_getProfile",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get current user profile",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/with-price-group": {
      "get": {
        "operationId": "UserController_findAllWithPriceGroup",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users": {
      "get": {
        "operationId": "UserController_findAll",
        "parameters": [
          {
            "name": "assignedToMe",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/profile-with-currency": {
      "get": {
        "operationId": "UserController_getProfileWithCurrency",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/profile-alias": {
      "get": {
        "operationId": "UserController_getProfileAlias",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/{id}": {
      "get": {
        "operationId": "UserController_findById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "UUID of the user to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "put": {
        "operationId": "UserController_updateUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update user data (Admin only)",
        "tags": [
          "Users"
        ]
      },
      "delete": {
        "operationId": "UserController_deleteUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/{id}/price-group": {
      "patch": {
        "operationId": "UserController_updatePriceGroup",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/{id}/active": {
      "patch": {
        "operationId": "UserController_setActive",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/{id}/balance/add": {
      "patch": {
        "operationId": "UserController_addFunds",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/{id}/overdraft": {
      "patch": {
        "operationId": "UserController_setOverdraft",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/{id}/password": {
      "patch": {
        "operationId": "UserController_adminSetPassword",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminSetPasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Admin/Dev: set user password",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/pages/about": {
      "get": {
        "operationId": "PagesController_about",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Pages"
        ]
      }
    },
    "/api/pages/infoes": {
      "get": {
        "operationId": "PagesController_infoes",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Pages"
        ]
      }
    },
    "/api/currencies": {
      "get": {
        "operationId": "CurrenciesController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Currencies"
        ]
      },
      "post": {
        "operationId": "CurrenciesController_create",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Currencies"
        ]
      }
    },
    "/api/currencies/bulk-update": {
      "put": {
        "operationId": "CurrenciesController_bulkUpdate",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Currencies"
        ]
      }
    },
    "/api/currencies/{id}": {
      "put": {
        "operationId": "CurrenciesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Currencies"
        ]
      },
      "delete": {
        "operationId": "CurrenciesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Currencies"
        ]
      }
    },
    "/api/currencies/seed-defaults": {
      "post": {
        "operationId": "CurrenciesController_seedDefaults",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Currencies"
        ]
      }
    },
    "/api/notifications/mine": {
      "get": {
        "operationId": "NotificationsController_mine",
        "parameters": [
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cursor",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Notifications"
        ]
      }
    },
    "/api/notifications/my": {
      "get": {
        "operationId": "NotificationsController_my",
        "parameters": [
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cursor",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Notifications"
        ]
      }
    },
    "/api/notifications": {
      "get": {
        "operationId": "NotificationsController_aliasRoot",
        "parameters": [
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cursor",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Notifications"
        ]
      }
    },
    "/api/notifications/{id}/read": {
      "patch": {
        "operationId": "NotificationsController_readOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Notifications"
        ]
      }
    },
    "/api/notifications/read-all": {
      "patch": {
        "operationId": "NotificationsController_readAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Notifications"
        ]
      }
    },
    "/api/notifications/announce": {
      "post": {
        "operationId": "NotificationsController_announce",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Notifications"
        ]
      }
    },
    "/api/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "تم تسجيل الدخول بنجاح"
          },
          "401": {
            "description": "بيانات غير صحيحة"
          }
        },
        "summary": "تسجيل الدخول بالبريد أو اسم المستخدم",
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/auth/complete-totp": {
      "post": {
        "operationId": "AuthController_completeTotp",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/auth/debug-session": {
      "post": {
        "operationId": "AuthController_debugSession",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "DEBUG: فحص الكوكي والـ Tenant (يحذف لاحقاً)",
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/auth/logout": {
      "post": {
        "operationId": "AuthController_logout",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "تسجيل الخروج ومسح كوكي auth",
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/auth/bootstrap-developer": {
      "post": {
        "operationId": "AuthController_bootstrapDeveloper",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "secret": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "secret",
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "إنشاء حساب مطوّر عالمي عبر سر بيئة (مرة واحدة)",
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/auth/dev-token": {
      "post": {
        "operationId": "AuthController_issueDevToken",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "secret": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "tenantId": {
                    "type": "string"
                  }
                },
                "required": [
                  "secret",
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "إصدار JWT للمطور مباشرة عبر سر بيئة (للاستخدام التشغيلي)",
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/auth/register": {
      "post": {
        "operationId": "AuthController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "تم إنشاء الحساب بنجاح"
          }
        },
        "summary": "إنشاء حساب جديد",
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/auth/change-password": {
      "post": {
        "operationId": "AuthController_changePassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/auth/assume-tenant": {
      "post": {
        "operationId": "AuthController_assumeTenant",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/auth/request-email-verification": {
      "post": {
        "operationId": "AuthController_requestEmailVerification",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/auth/verify-email": {
      "post": {
        "operationId": "AuthController_verifyEmail",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/auth/request-password-reset": {
      "post": {
        "operationId": "AuthController_requestPasswordReset",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/auth/reset-password": {
      "post": {
        "operationId": "AuthController_resetPassword",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/auth/totp/setup": {
      "post": {
        "operationId": "TotpController_setupTotp",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "TOTP"
        ]
      }
    },
    "/api/auth/totp/verify-setup": {
      "post": {
        "operationId": "TotpController_verifySetup",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "TOTP"
        ]
      }
    },
    "/api/auth/totp/verify": {
      "post": {
        "operationId": "TotpController_verifyTotp",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "TOTP"
        ]
      }
    },
    "/api/auth/totp/status": {
      "get": {
        "operationId": "TotpController_getTotpStatus",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "TOTP"
        ]
      }
    },
    "/api/auth/totp/disable": {
      "post": {
        "operationId": "TotpController_disable",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "TOTP"
        ]
      }
    },
    "/api/auth/totp/recovery-codes/regenerate": {
      "post": {
        "operationId": "TotpController_regenerateCodes",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "TOTP"
        ]
      }
    },
    "/api/auth/totp/reset/{userId}": {
      "post": {
        "operationId": "TotpController_resetUserTotp",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "TOTP"
        ]
      }
    },
    "/api/auth/passkeys": {
      "get": {
        "operationId": "PasskeysController_list",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Passkeys"
        ]
      }
    },
    "/api/auth/passkeys/options/register": {
      "post": {
        "operationId": "PasskeysController_optionsRegister",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Passkeys"
        ]
      }
    },
    "/api/auth/passkeys/_debug": {
      "get": {
        "operationId": "PasskeysController_debug",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Passkeys"
        ]
      }
    },
    "/api/auth/passkeys/register": {
      "post": {
        "operationId": "PasskeysController_register",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Passkeys"
        ]
      }
    },
    "/api/auth/passkeys/options/login": {
      "post": {
        "operationId": "PasskeysController_optionsLogin",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Passkeys"
        ]
      }
    },
    "/api/auth/passkeys/login": {
      "post": {
        "operationId": "PasskeysController_login",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Passkeys"
        ]
      }
    },
    "/api/auth/passkeys/{id}": {
      "delete": {
        "operationId": "PasskeysController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Passkeys"
        ]
      }
    },
    "/api/admin/dashboard": {
      "get": {
        "operationId": "AdminController_getAdminDashboard",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "admin"
        ]
      }
    },
    "/api/admin/users": {
      "get": {
        "operationId": "AdminController_getAllUsers",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "admin"
        ]
      }
    },
    "/api/admin/upload": {
      "post": {
        "operationId": "UploadController_uploadFile",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Upload"
        ]
      }
    },
    "/api/admin/reports/users": {
      "get": {
        "operationId": "ReportsAdminController_searchUsers",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "ReportsAdmin"
        ]
      }
    },
    "/api/admin/reports/providers": {
      "get": {
        "operationId": "ReportsAdminController_listProviders",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "ReportsAdmin"
        ]
      }
    },
    "/api/admin/reports/profits": {
      "get": {
        "operationId": "ReportsAdminController_getProfits",
        "parameters": [
          {
            "name": "range",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "provider",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "view",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "ReportsAdmin"
        ]
      }
    },
    "/api/admin/reports/profits/by-provider": {
      "get": {
        "operationId": "ReportsAdminController_getProfitByProvider",
        "parameters": [
          {
            "name": "start",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "ReportsAdmin"
        ]
      }
    },
    "/api/admin/reports/accounting/close": {
      "patch": {
        "operationId": "ReportsAdminController_closeMonth",
        "parameters": [
          {
            "name": "year",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "month",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "note",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "ReportsAdmin"
        ]
      }
    },
    "/api/admin/reports/accounting/close-previous": {
      "patch": {
        "operationId": "ReportsAdminController_closePrev",
        "parameters": [
          {
            "name": "note",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "ReportsAdmin"
        ]
      }
    },
    "/api/admin/settings/about": {
      "get": {
        "operationId": "SiteSettingsAdminController_getAbout",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "SiteSettingsAdmin"
        ]
      },
      "put": {
        "operationId": "SiteSettingsAdminController_setAbout",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "SiteSettingsAdmin"
        ]
      }
    },
    "/api/admin/settings/infoes": {
      "get": {
        "operationId": "SiteSettingsAdminController_getInfoes",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "SiteSettingsAdmin"
        ]
      },
      "put": {
        "operationId": "SiteSettingsAdminController_setInfoes",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "SiteSettingsAdmin"
        ]
      }
    },
    "/api/admin/providers/dev": {
      "post": {
        "operationId": "ProvidersAdminController_createDevProvider",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIntegrationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "ProvidersAdmin"
        ]
      },
      "get": {
        "operationId": "ProvidersAdminController_listDevProviders",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "ProvidersAdmin"
        ]
      }
    },
    "/api/admin/providers/dev/diag": {
      "get": {
        "operationId": "ProvidersAdminController_diagIntegrations",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "ProvidersAdmin"
        ]
      }
    },
    "/api/admin/providers/dev/{id}": {
      "patch": {
        "operationId": "ProvidersAdminController_updateDevProvider",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateIntegrationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "ProvidersAdmin"
        ]
      },
      "delete": {
        "operationId": "ProvidersAdminController_deleteDevProvider",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "ProvidersAdmin"
        ]
      }
    },
    "/api/admin/providers/tenant": {
      "get": {
        "operationId": "ProvidersAdminController_listTenantProviders",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "ProvidersAdmin"
        ]
      }
    },
    "/api/admin/stats/supervisors": {
      "get": {
        "operationId": "StatsAdminController_supervisors",
        "parameters": [
          {
            "name": "from",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "StatsAdmin"
        ]
      }
    },
    "/api/admin/stats/supervisors/{id}": {
      "get": {
        "operationId": "StatsAdminController_supervisorDetails",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "StatsAdmin"
        ]
      }
    },
    "/api/admin/stats/users": {
      "get": {
        "operationId": "StatsAdminController_users",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "StatsAdmin"
        ]
      }
    },
    "/api/admin/stats/orders": {
      "get": {
        "operationId": "StatsAdminController_orders",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "StatsAdmin"
        ]
      }
    },
    "/api/admin/products/{id}/supports-counter": {
      "patch": {
        "description": "Enables or disables unit (counter) pricing features on a product. Must be enabled before configuring any unit-type packages or setting unit price overrides.",
        "operationId": "ProductsAdminController_toggleSupportsCounter",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "supportsCounter": {
                    "type": "boolean",
                    "example": true
                  }
                },
                "required": [
                  "supportsCounter"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Toggle counter (unit) support for a product",
        "tags": [
          "ProductsAdmin"
        ]
      }
    },
    "/api/admin/products/price-groups/{groupId}/package-prices/{packageId}/unit": {
      "put": {
        "description": "Stores a price-per-unit override specific to a price group. Requires: product.supportsCounter = true and package.type = unit.",
        "operationId": "ProductsAdminController_setUnitPriceOverride",
        "parameters": [
          {
            "name": "groupId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "packageId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "unitPrice": {
                    "type": "string",
                    "example": "0.1250",
                    "description": "Positive decimal price per single unit (scale up to 4). Will be rounded to 4 decimals."
                  }
                },
                "required": [
                  "unitPrice"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Set unit price override for a price group/package",
        "tags": [
          "ProductsAdmin"
        ]
      },
      "delete": {
        "description": "Nullifies the stored unitPrice override (does not delete the base row). Subsequent pricing uses baseUnitPrice from the package.",
        "operationId": "ProductsAdminController_deleteUnitPriceOverride",
        "parameters": [
          {
            "name": "groupId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "packageId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Remove unit price override for a price group/package",
        "tags": [
          "ProductsAdmin"
        ]
      }
    },
    "/api/admin/products/price-groups/{groupId}/package-prices": {
      "get": {
        "description": "Fetches pricing row for a package within a given price group. Includes unit metadata and unitPrice override when applicable.",
        "operationId": "ProductsAdminController_getPriceGroupPackagePrice",
        "parameters": [
          {
            "name": "groupId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "packageId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Get price group package price including unitPrice (if unit package)",
        "tags": [
          "ProductsAdmin"
        ]
      }
    },
    "/api/admin/products/packages/{id}/unit": {
      "patch": {
        "description": "Defines the measuring unit metadata and base price-per-unit. The baseUnitPrice is used when no price-group override (unitPrice) exists.",
        "operationId": "ProductsAdminController_updateUnitPackage",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "unitName": {
                    "type": "string",
                    "example": "Message"
                  },
                  "unitCode": {
                    "type": "string",
                    "example": "MSG"
                  },
                  "minUnits": {
                    "type": "string",
                    "example": "10",
                    "description": "Optional minimum allowed quantity (>=0) scale<=4"
                  },
                  "maxUnits": {
                    "type": "string",
                    "example": "1000",
                    "description": "Optional maximum allowed quantity (>= minUnits) scale<=4"
                  },
                  "step": {
                    "type": "string",
                    "example": "1",
                    "description": "Optional increment step (>0) scale<=4"
                  },
                  "baseUnitPrice": {
                    "type": "string",
                    "example": "0.0500",
                    "description": "Positive decimal (scale<=4). Rounded to 4 decimals."
                  }
                },
                "required": [
                  "unitName",
                  "baseUnitPrice"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Update unit (counter) fields for a unit-type package",
        "tags": [
          "ProductsAdmin"
        ]
      }
    },
    "/api/admin/products/{id}/image/custom": {
      "put": {
        "operationId": "ProductsAdminController_setCustomImage",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "ProductsAdmin"
        ]
      },
      "delete": {
        "operationId": "ProductsAdminController_clearCustomImage",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "ProductsAdmin"
        ]
      }
    },
    "/api/admin/products/image-metrics/latest": {
      "get": {
        "operationId": "ProductsAdminController_latestImageMetrics",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "ProductsAdmin"
        ]
      }
    },
    "/api/admin/products/image-metrics/delta": {
      "get": {
        "operationId": "ProductsAdminController_imageMetricsDelta",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "ProductsAdmin"
        ]
      }
    },
    "/api/admin/products/images/regenerate-thumbnails": {
      "post": {
        "operationId": "ProductsAdminController_regenerateThumbs",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "ProductsAdmin"
        ]
      }
    },
    "/api/products/price-groups": {
      "get": {
        "operationId": "ProductsController_getPriceGroups",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ]
      },
      "post": {
        "operationId": "ProductsController_createPriceGroup",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ]
      }
    },
    "/api/products/price-groups/{id}": {
      "delete": {
        "operationId": "ProductsController_deletePriceGroup",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ]
      }
    },
    "/api/products/users-price-groups": {
      "get": {
        "operationId": "ProductsController_getUsersPriceGroups",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ]
      }
    },
    "/api/products": {
      "get": {
        "operationId": "ProductsController_findAll",
        "parameters": [
          {
            "name": "all",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeNull",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ]
      },
      "post": {
        "operationId": "ProductsController_create",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ]
      }
    },
    "/api/products/global": {
      "get": {
        "operationId": "ProductsController_listGlobal",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ]
      },
      "post": {
        "operationId": "ProductsController_createGlobal",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ]
      }
    },
    "/api/products/{id}": {
      "get": {
        "operationId": "ProductsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "all",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeNull",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ]
      },
      "put": {
        "operationId": "ProductsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ]
      },
      "delete": {
        "operationId": "ProductsController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ]
      }
    },
    "/api/products/{id}/bridges": {
      "get": {
        "operationId": "ProductsController_getAvailableBridges",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ]
      }
    },
    "/api/products/{id}/clone-to-tenant": {
      "post": {
        "operationId": "ProductsController_cloneToTenant",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ]
      }
    },
    "/api/products/{id}/clone-check": {
      "get": {
        "operationId": "ProductsController_cloneCheck",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ]
      }
    },
    "/api/products/{id}/clone-to-tenant-advanced": {
      "post": {
        "operationId": "ProductsController_cloneToTenantAdvanced",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mode",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ]
      }
    },
    "/api/products/{id}/image": {
      "post": {
        "operationId": "ProductsController_uploadProductImage",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ]
      }
    },
    "/api/products/{id}/packages": {
      "post": {
        "operationId": "ProductsController_addPackage",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ]
      }
    },
    "/api/products/packages/{id}": {
      "delete": {
        "operationId": "ProductsController_deletePackage",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ]
      },
      "put": {
        "operationId": "ProductsController_legacyUpdatePackage",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ]
      }
    },
    "/api/products/packages/{id}/prices": {
      "put": {
        "operationId": "ProductsController_updatePackagePrices",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ]
      }
    },
    "/api/products/packages/{id}/code": {
      "patch": {
        "operationId": "ProductsController_updatePackageCode",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePackageCodeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ]
      },
      "get": {
        "operationId": "ProductsController_getPackageCode",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ]
      }
    },
    "/api/products/packages/{id}/basic": {
      "patch": {
        "operationId": "ProductsController_updatePackageBasic",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ]
      }
    },
    "/api/products/packages/{id}/provider": {
      "patch": {
        "operationId": "ProductsController_updatePackageProvider",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ]
      }
    },
    "/api/products/packages/prices": {
      "post": {
        "operationId": "ProductsController_getPackagesPricesBulk",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ]
      },
      "get": {
        "operationId": "ProductsController_getPackagesPricesQuery",
        "parameters": [
          {
            "name": "packageIds",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ]
      }
    },
    "/api/products/user": {
      "get": {
        "operationId": "ProductsController_getAllForUser",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ]
      }
    },
    "/api/products/user/{id}": {
      "get": {
        "operationId": "ProductsController_getOneForUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ]
      }
    },
    "/api/orders/me": {
      "get": {
        "operationId": "ProductOrdersController_getMyOrders",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "orders"
        ]
      }
    },
    "/api/orders/user/{userId}": {
      "get": {
        "operationId": "ProductOrdersController_getUserOrdersAdmin",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "orders"
        ]
      }
    },
    "/api/orders": {
      "get": {
        "operationId": "ProductOrdersController_getAllOrders",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "orders"
        ]
      },
      "post": {
        "operationId": "ProductOrdersController_createOrder",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "order_uuid": {
                      "type": "string",
                      "nullable": true
                    },
                    "origin": {
                      "type": "string",
                      "example": "panel"
                    },
                    "status": {
                      "type": "string",
                      "example": "pending"
                    },
                    "quantity": {
                      "type": "string",
                      "example": "2.5"
                    },
                    "price_usd": {
                      "type": "number",
                      "example": 3.125
                    },
                    "unit_price_usd": {
                      "type": "number",
                      "example": 1.25
                    },
                    "unitPriceApplied": {
                      "type": "string",
                      "example": "1.2500"
                    },
                    "sellPrice": {
                      "type": "string",
                      "example": "3.1250"
                    },
                    "cost": {
                      "type": "string",
                      "nullable": true,
                      "example": "0.0000"
                    },
                    "profit": {
                      "type": "string",
                      "nullable": true,
                      "example": "3.1250"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "product": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    "package": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    "userIdentifier": {
                      "type": "string",
                      "nullable": true
                    },
                    "extraField": {
                      "type": "string",
                      "nullable": true
                    },
                    "reused": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "ERR_UNIT_NOT_SUPPORTED | ERR_QUANTITY_REQUIRED | ERR_QTY_BELOW_MIN | ERR_QTY_ABOVE_MAX | ERR_QTY_STEP_MISMATCH | ERR_UNIT_PRICE_MISSING"
          }
        },
        "tags": [
          "orders"
        ]
      }
    },
    "/api/orders/{id}": {
      "get": {
        "operationId": "ProductOrdersController_getOrderDetails",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "orders"
        ]
      }
    },
    "/api/orders/{id}/status": {
      "patch": {
        "operationId": "ProductOrdersController_setStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "orders"
        ]
      }
    },
    "/api/admin/orders": {
      "get": {
        "operationId": "ProductOrdersAdminController_list",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "ProductOrdersAdmin"
        ]
      }
    },
    "/api/admin/orders/all": {
      "get": {
        "operationId": "ProductOrdersAdminController_getAllOrders",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "ProductOrdersAdmin"
        ]
      }
    },
    "/api/admin/orders/{id}/notes": {
      "post": {
        "operationId": "ProductOrdersAdminController_addNote",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "ProductOrdersAdmin"
        ]
      },
      "get": {
        "operationId": "ProductOrdersAdminController_getNotes",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "ProductOrdersAdmin"
        ]
      }
    },
    "/api/admin/orders/bulk/manual": {
      "post": {
        "operationId": "ProductOrdersAdminController_setManual",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "ProductOrdersAdmin"
        ]
      }
    },
    "/api/admin/orders/bulk/dispatch": {
      "post": {
        "operationId": "ProductOrdersAdminController_bulkDispatch",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "ProductOrdersAdmin"
        ]
      }
    },
    "/api/admin/orders/bulk/approve": {
      "post": {
        "operationId": "ProductOrdersAdminController_bulkApprove",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "ProductOrdersAdmin"
        ]
      }
    },
    "/api/admin/orders/bulk/reject": {
      "post": {
        "operationId": "ProductOrdersAdminController_bulkReject",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "ProductOrdersAdmin"
        ]
      }
    },
    "/api/admin/orders/{id}/dispatch": {
      "post": {
        "operationId": "ProductOrdersAdminController_dispatchOrder",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "ProductOrdersAdmin"
        ]
      }
    },
    "/api/admin/orders/{id}/refresh": {
      "post": {
        "operationId": "ProductOrdersAdminController_refreshOrder",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "ProductOrdersAdmin"
        ]
      }
    },
    "/api/admin/orders/{id}/sync-external": {
      "patch": {
        "operationId": "ProductOrdersAdminController_syncExternal",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "ProductOrdersAdmin"
        ]
      }
    },
    "/api/admin/orders/{id}/status": {
      "patch": {
        "operationId": "ProductOrdersAdminController_updateOrderStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "ProductOrdersAdmin"
        ]
      }
    },
    "/api/admin/orders/{id}/logs": {
      "get": {
        "operationId": "ProductOrdersAdminController_getLogs",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "ProductOrdersAdmin"
        ]
      }
    },
    "/api/admin/integrations": {
      "post": {
        "operationId": "IntegrationsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIntegrationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Integrations"
        ]
      },
      "get": {
        "operationId": "IntegrationsController_list",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Integrations"
        ]
      }
    },
    "/api/admin/integrations/{id}": {
      "get": {
        "operationId": "IntegrationsController_getOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Integrations"
        ]
      },
      "put": {
        "operationId": "IntegrationsController_updateOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateIntegrationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Integrations"
        ]
      },
      "delete": {
        "operationId": "IntegrationsController_deleteOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Integrations"
        ]
      }
    },
    "/api/admin/integrations/{id}/test": {
      "post": {
        "operationId": "IntegrationsController_test",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Integrations"
        ]
      }
    },
    "/api/admin/integrations/{id}/debug-balance": {
      "post": {
        "operationId": "IntegrationsController_debugBalance",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Integrations"
        ]
      }
    },
    "/api/admin/integrations/{id}/refresh-balance": {
      "post": {
        "operationId": "IntegrationsController_refresh",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Integrations"
        ]
      }
    },
    "/api/admin/integrations/{id}/balance": {
      "post": {
        "operationId": "IntegrationsController_balance",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Integrations"
        ]
      }
    },
    "/api/admin/integrations/{id}/sync-products": {
      "post": {
        "operationId": "IntegrationsController_sync",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Integrations"
        ]
      }
    },
    "/api/admin/integrations/{id}/orders": {
      "post": {
        "operationId": "IntegrationsController_place",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlaceOrderDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Integrations"
        ]
      }
    },
    "/api/admin/integrations/{id}/orders/status": {
      "get": {
        "operationId": "IntegrationsController_status",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Integrations"
        ]
      }
    },
    "/api/admin/integrations/{id}/packages": {
      "get": {
        "operationId": "IntegrationsController_getPackages",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Integrations"
        ]
      },
      "post": {
        "operationId": "IntegrationsController_saveMappings",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Integrations"
        ]
      }
    },
    "/api/admin/integrations/routing/all": {
      "get": {
        "operationId": "IntegrationsController_getRoutingAll",
        "parameters": [
          {
            "name": "q",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Integrations"
        ]
      }
    },
    "/api/admin/integrations/routing/set": {
      "post": {
        "operationId": "IntegrationsController_setRoutingField",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Integrations"
        ]
      }
    },
    "/api/admin/integrations/provider-cost": {
      "post": {
        "operationId": "IntegrationsController_refreshProviderCost",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Integrations"
        ]
      }
    },
    "/api/admin/integrations/routing/set-type": {
      "post": {
        "operationId": "IntegrationsController_setRoutingType",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Integrations"
        ]
      }
    },
    "/api/admin/integrations/routing/set-code-group": {
      "post": {
        "operationId": "IntegrationsController_setRoutingCodeGroup",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Integrations"
        ]
      }
    },
    "/api/deposits/mine": {
      "get": {
        "operationId": "DepositsController_myDepositsPaginated",
        "parameters": [
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cursor",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "source",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Deposits"
        ]
      }
    },
    "/api/deposits": {
      "get": {
        "operationId": "DepositsController_myDepositsAlias",
        "parameters": [
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cursor",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "source",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Deposits"
        ]
      },
      "post": {
        "operationId": "DepositsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDepositDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Deposits"
        ]
      }
    },
    "/api/admin/deposits": {
      "get": {
        "operationId": "DepositsAdminController_list",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "DepositsAdmin"
        ]
      }
    },
    "/api/admin/deposits/{id}/status": {
      "patch": {
        "operationId": "DepositsAdminController_setStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDepositStatusDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "DepositsAdmin"
        ]
      }
    },
    "/api/admin/deposits/topup": {
      "post": {
        "operationId": "DepositsAdminController_adminTopup",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "DepositsAdmin"
        ]
      }
    },
    "/api/payment-methods": {
      "get": {
        "operationId": "PaymentMethodsController_findActive",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "PaymentMethods"
        ]
      }
    },
    "/api/payment-methods/active": {
      "get": {
        "operationId": "PaymentMethodsController_findActiveAlias",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "PaymentMethods"
        ]
      }
    },
    "/api/admin/payment-methods": {
      "get": {
        "operationId": "PaymentMethodsAdminController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "PaymentMethodsAdmin"
        ]
      },
      "post": {
        "operationId": "PaymentMethodsAdminController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentMethodDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "PaymentMethodsAdmin"
        ]
      }
    },
    "/api/admin/payment-methods/{id}": {
      "get": {
        "operationId": "PaymentMethodsAdminController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "PaymentMethodsAdmin"
        ]
      },
      "patch": {
        "operationId": "PaymentMethodsAdminController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePaymentMethodDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "PaymentMethodsAdmin"
        ]
      },
      "delete": {
        "operationId": "PaymentMethodsAdminController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "PaymentMethodsAdmin"
        ]
      }
    },
    "/api/admin/codes/groups": {
      "get": {
        "operationId": "CodesAdminController_listGroups",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "CodesAdmin"
        ]
      },
      "post": {
        "operationId": "CodesAdminController_createGroup",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "CodesAdmin"
        ]
      }
    },
    "/api/admin/codes/groups/{id}": {
      "patch": {
        "operationId": "CodesAdminController_updateGroup",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "CodesAdmin"
        ]
      }
    },
    "/api/admin/codes/groups/{id}/toggle": {
      "patch": {
        "operationId": "CodesAdminController_toggleGroup",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "CodesAdmin"
        ]
      }
    },
    "/api/admin/codes/groups/{id}/items": {
      "get": {
        "operationId": "CodesAdminController_listItems",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "CodesAdmin"
        ]
      }
    },
    "/api/admin/codes/groups/{id}/items/bulk": {
      "post": {
        "operationId": "CodesAdminController_addBulkItems",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "CodesAdmin"
        ]
      }
    },
    "/api/admin/codes/items/{itemId}": {
      "delete": {
        "operationId": "CodesAdminController_deleteItem",
        "parameters": [
          {
            "name": "itemId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "CodesAdmin"
        ]
      }
    },
    "/api/admin/tenants": {
      "get": {
        "operationId": "TenantsAdminController_list",
        "parameters": [
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "Filter by status (default active)",
            "schema": {
              "enum": [
                "active",
                "trashed",
                "all"
              ],
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "List tenants with optional status filter and pagination",
        "tags": [
          "Admin Tenants"
        ]
      },
      "post": {
        "operationId": "TenantsAdminController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Admin Tenants"
        ]
      }
    },
    "/api/admin/tenants/provision": {
      "post": {
        "operationId": "TenantsAdminController_provision",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProvisionTenantDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Admin Tenants"
        ]
      }
    },
    "/api/admin/tenants/{id}": {
      "get": {
        "operationId": "TenantsAdminController_get",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Admin Tenants"
        ]
      },
      "patch": {
        "operationId": "TenantsAdminController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Admin Tenants"
        ]
      },
      "delete": {
        "operationId": "TenantsAdminController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Admin Tenants"
        ]
      }
    },
    "/api/admin/tenants/{id}/trash": {
      "post": {
        "operationId": "TenantsAdminController_trash",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Admin Tenants"
        ]
      }
    },
    "/api/admin/tenants/{id}/restore": {
      "post": {
        "operationId": "TenantsAdminController_restore",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "409": {
            "description": "Conflict (code or domains in use)",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "error": "conflict",
                    "conflicts": {
                      "code": true,
                      "domains": [
                        "x.wtn4.com"
                      ]
                    },
                    "suggestion": {
                      "code": "code-1a2b",
                      "domains": {
                        "x.wtn4.com": "x-1a2b.wtn4.com"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Restore a trashed tenant",
        "tags": [
          "Admin Tenants"
        ]
      }
    },
    "/api/admin/tenants/{id}/hard": {
      "delete": {
        "operationId": "TenantsAdminController_hardDelete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hard",
            "required": true,
            "in": "query",
            "schema": {
              "example": "true",
              "type": "string"
            }
          },
          {
            "name": "confirm",
            "required": true,
            "in": "query",
            "description": "Must equal tenant code",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "409": {
            "description": "Preconditions failed (balances or invoices open)",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "error": "precondition_failed",
                    "balances": 2,
                    "openInvoices": 1
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Hard delete a tenant (dangerous)",
        "tags": [
          "Admin Tenants"
        ]
      }
    },
    "/api/admin/tenants/{id}/domains": {
      "get": {
        "operationId": "TenantsAdminController_listDomains",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Admin Tenants"
        ]
      },
      "post": {
        "operationId": "TenantsAdminController_addDomain",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddDomainDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Admin Tenants"
        ]
      }
    },
    "/api/admin/tenants/{id}/domains/{domainId}": {
      "patch": {
        "operationId": "TenantsAdminController_patchDomain",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "domainId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchDomainDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Admin Tenants"
        ]
      },
      "delete": {
        "operationId": "TenantsAdminController_deleteDomain",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "domainId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Admin Tenants"
        ]
      }
    },
    "/api/admin/tenants/{id}/reset-owner-password": {
      "post": {
        "operationId": "TenantsAdminController_resetOwnerPassword",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Admin Tenants"
        ]
      }
    },
    "/api/tenant/current": {
      "get": {
        "operationId": "TenantCurrentController_getCurrent",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "TenantCurrent"
        ]
      }
    },
    "/api/tenant/distributor/pricing/groups": {
      "get": {
        "operationId": "DistributorPricingController_listGroups",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "DistributorPricing"
        ]
      },
      "post": {
        "operationId": "DistributorPricingController_createGroup",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "DistributorPricing"
        ]
      }
    },
    "/api/tenant/distributor/pricing/attach-user": {
      "post": {
        "operationId": "DistributorPricingController_attach",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "DistributorPricing"
        ]
      }
    },
    "/api/tenant/distributor/pricing/detach-user": {
      "post": {
        "operationId": "DistributorPricingController_detach",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "DistributorPricing"
        ]
      }
    },
    "/api/tenant/distributor/pricing/set-price": {
      "post": {
        "operationId": "DistributorPricingController_setPrice",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "DistributorPricing"
        ]
      }
    },
    "/api/tenant/distributor/pricing/table": {
      "get": {
        "operationId": "DistributorPricingController_table",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "DistributorPricing"
        ]
      }
    },
    "/api/tenant/distributor/orders/list": {
      "get": {
        "operationId": "DistributorOrdersController_list",
        "parameters": [
          {
            "name": "from",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "DistributorOrders"
        ]
      }
    },
    "/api/tenant/distributor/orders/reports/profit": {
      "get": {
        "operationId": "DistributorOrdersController_profit",
        "parameters": [
          {
            "name": "from",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "DistributorOrders"
        ]
      }
    },
    "/api/tenant/distributor/users/list": {
      "get": {
        "operationId": "DistributorUsersController_list",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "DistributorUsers"
        ]
      }
    },
    "/api/tenant/distributor/users/{id}/reset-password": {
      "patch": {
        "operationId": "DistributorUsersController_resetPassword",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "DistributorUsers"
        ]
      }
    },
    "/api/tenant/distributor/users/{id}/assign-price-group": {
      "post": {
        "operationId": "DistributorUsersController_assignPriceGroup",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "DistributorUsers"
        ]
      }
    },
    "/api/api/tenant/external/v1/ping": {
      "get": {
        "operationId": "ExternalPublicController_ping",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "ExternalPublic"
        ]
      }
    },
    "/api/api/tenant/external/v1/wallet/balance": {
      "get": {
        "operationId": "ExternalPublicController_balance",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "ExternalPublic"
        ]
      }
    },
    "/api/api/tenant/external/v1/orders": {
      "post": {
        "operationId": "ExternalOrdersController_createOrder",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "ExternalOrders"
        ]
      }
    },
    "/api/api/tenant/external/v1/orders/{id}": {
      "get": {
        "operationId": "ExternalOrdersController_getOrder",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "ExternalOrders"
        ]
      }
    },
    "/api/api/tenant/users/{id}/api-tokens": {
      "post": {
        "operationId": "TenantApiTokensController_create",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "TenantApiTokens"
        ]
      },
      "get": {
        "operationId": "TenantApiTokensController_list",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "TenantApiTokens"
        ]
      }
    },
    "/api/api/tenant/api-tokens/{tokenId}": {
      "patch": {
        "operationId": "TenantApiTokensController_patch",
        "parameters": [
          {
            "name": "tokenId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "TenantApiTokens"
        ]
      },
      "delete": {
        "operationId": "TenantApiTokensController_del",
        "parameters": [
          {
            "name": "tokenId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "TenantApiTokens"
        ]
      }
    },
    "/api/tenant/billing/overview": {
      "get": {
        "operationId": "TenantBillingController_overview",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "TenantBilling"
        ]
      }
    },
    "/api/tenant/billing/invoices": {
      "get": {
        "operationId": "TenantBillingController_invoices",
        "parameters": [
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "overdue",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "TenantBilling"
        ]
      }
    },
    "/api/tenant/billing/payments/request": {
      "post": {
        "operationId": "TenantBillingController_requestPayment",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "TenantBilling"
        ]
      }
    },
    "/api/admin/billing/tenants": {
      "get": {
        "operationId": "AdminBillingController_tenants",
        "parameters": [
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "overdue",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "AdminBilling"
        ]
      }
    },
    "/api/admin/billing/invoices/{id}/mark-paid": {
      "post": {
        "operationId": "AdminBillingController_markPaid",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "AdminBilling"
        ]
      }
    },
    "/api/admin/billing/manual-issue": {
      "post": {
        "operationId": "AdminBillingController_manualIssue",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "AdminBilling"
        ]
      }
    },
    "/api/admin/billing/config/{tenantId}": {
      "patch": {
        "operationId": "AdminBillingController_patchConfig",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "AdminBilling"
        ]
      }
    },
    "/api/admin/billing/tenants/{tenantId}/invoices": {
      "get": {
        "operationId": "AdminBillingController_tenantInvoices",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "overdue",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "AdminBilling"
        ]
      }
    },
    "/api/admin/billing/health": {
      "get": {
        "operationId": "AdminBillingController_health",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "AdminBilling"
        ]
      }
    },
    "/client/api/openapi.json": {
      "get": {
        "operationId": "ClientApiOpenapiPublicController_openapi",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "ClientApiOpenapiPublic"
        ]
      }
    },
    "/api/client/api/docs": {
      "get": {
        "operationId": "ClientApiOpenapiPublicController_docs",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "ClientApiOpenapiPublic"
        ]
      }
    },
    "/api/client/api/profile": {
      "get": {
        "operationId": "ClientApiController_profile",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Client API"
        ]
      }
    },
    "/api/client/api/products": {
      "get": {
        "operationId": "ClientApiController_products",
        "parameters": [
          {
            "name": "product_id",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "products_id",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "base",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Client API"
        ]
      }
    },
    "/api/client/api/content/{categoryId}": {
      "get": {
        "operationId": "ClientApiController_content",
        "parameters": [
          {
            "name": "categoryId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Client API"
        ]
      }
    },
    "/api/client/api/newOrder/{packageId}/params": {
      "post": {
        "operationId": "ClientApiController_newOrder",
        "parameters": [
          {
            "name": "packageId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_uuid",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Client API"
        ]
      }
    },
    "/api/client/api/check": {
      "get": {
        "operationId": "ClientApiController_check",
        "parameters": [
          {
            "name": "orders",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uuid",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Client API"
        ]
      }
    },
    "/api/account/api": {
      "get": {
        "operationId": "ClientApiAccountController_status",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Client API"
        ]
      }
    },
    "/api/dev/errors/ingest": {
      "post": {
        "operationId": "ErrorsController_ingest",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Errors"
        ]
      }
    },
    "/api/dev/errors": {
      "get": {
        "operationId": "ErrorsController_list",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Errors"
        ]
      }
    },
    "/api/dev/errors/{id}": {
      "get": {
        "operationId": "ErrorsController_get",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Errors"
        ]
      },
      "delete": {
        "operationId": "ErrorsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Errors"
        ]
      }
    },
    "/api/dev/errors/{id}/resolve": {
      "post": {
        "operationId": "ErrorsController_resolve",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Errors"
        ]
      }
    },
    "/api/dev/seed": {
      "post": {
        "operationId": "DevSeedController_seed",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "DevSeed"
        ]
      }
    },
    "/api/dev/seed/global-products": {
      "post": {
        "operationId": "DevSeedController_seedGlobalProducts",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "DevSeed"
        ]
      }
    },
    "/api/dev/filtered-products-sync": {
      "post": {
        "operationId": "DevFilteredProductsController_sync",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "DevFilteredProducts"
        ]
      }
    },
    "/api/dev/filtered-products-sync/status": {
      "get": {
        "operationId": "DevFilteredProductsController_status",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "DevFilteredProducts"
        ]
      }
    },
    "/api/dev/filtered-products-sync/repair": {
      "post": {
        "operationId": "DevFilteredProductsController_repair",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "DevFilteredProducts"
        ]
      }
    },
    "/api/dev/seed-products": {
      "post": {
        "operationId": "DevSeedProductsController_seed",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "DevSeedProducts"
        ]
      }
    },
    "/api/dev/toggle-nginx-maint": {
      "post": {
        "operationId": "DevMaintenanceController_toggle",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "DevMaintenance"
        ]
      }
    },
    "/api/dev/maintenance-status": {
      "get": {
        "operationId": "DevMaintenanceController_status",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "DevMaintenance"
        ]
      }
    },
    "/api/dev/maintenance-message": {
      "post": {
        "operationId": "DevMaintenanceController_message",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "DevMaintenance"
        ]
      }
    },
    "/api/muhammed/daily": {
      "get": {
        "operationId": "MuhammedController_list",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Muhammed"
        ]
      },
      "post": {
        "operationId": "MuhammedController_upsert",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertMuhammedDailyDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Muhammed"
        ]
      }
    },
    "/api/muhammed/sheet": {
      "get": {
        "operationId": "MuhammedController_getSheet",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Muhammed"
        ]
      }
    },
    "/api/muhammed/party": {
      "post": {
        "operationId": "MuhammedController_addParty",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MuhAddPartyDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Muhammed"
        ]
      }
    },
    "/api/muhammed/party/{id}": {
      "patch": {
        "operationId": "MuhammedController_updateParty",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MuhUpdatePartyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Muhammed"
        ]
      },
      "delete": {
        "operationId": "MuhammedController_deleteParty",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Muhammed"
        ]
      }
    },
    "/api/muhammed/rate": {
      "patch": {
        "operationId": "MuhammedController_updateRate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MuhUpdateRateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Muhammed"
        ]
      }
    },
    "/api/muhammed/export": {
      "post": {
        "operationId": "MuhammedController_createExport",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Muhammed"
        ]
      }
    },
    "/api/muhammed/exports": {
      "get": {
        "operationId": "MuhammedController_listExports",
        "parameters": [
          {
            "name": "from",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Muhammed"
        ]
      }
    },
    "/api/muhammed/exports/{id}": {
      "get": {
        "operationId": "MuhammedController_getExport",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Muhammed"
        ]
      },
      "delete": {
        "operationId": "MuhammedController_deleteExport",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Muhammed"
        ]
      }
    }
  },
  "info": {
    "title": "Watan API",
    "description": "API documentation for Watan project",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "JWT-auth": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "name": "Authorization",
        "in": "header"
      }
    },
    "schemas": {
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "test@example.com"
          },
          "password": {
            "type": "string",
            "example": "123456"
          },
          "fullName": {
            "type": "string",
            "example": "أحمد محمد"
          },
          "username": {
            "type": "string",
            "example": "ahmad"
          },
          "countryCode": {
            "type": "string",
            "example": "+90"
          },
          "phoneNumber": {
            "type": "string",
            "example": "5551234567"
          },
          "currencyId": {
            "type": "string",
            "example": "currency-uuid-here"
          }
        },
        "required": [
          "email",
          "password",
          "currencyId"
        ]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {}
      },
      "AdminSetPasswordDto": {
        "type": "object",
        "properties": {}
      },
      "LoginDto": {
        "type": "object",
        "properties": {}
      },
      "ChangePasswordDto": {
        "type": "object",
        "properties": {}
      },
      "CreateIntegrationDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateIntegrationDto": {
        "type": "object",
        "properties": {}
      },
      "UpdatePackageCodeDto": {
        "type": "object",
        "properties": {}
      },
      "CreateOrderDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "description": "معرّف المنتج",
            "example": "uuid-product"
          },
          "packageId": {
            "type": "string",
            "description": "معرّف الباقة",
            "example": "uuid-package"
          },
          "quantity": {
            "type": "string",
            "description": "الكمية مطلوبة فقط عندما تكون الباقة من النوع unit. تحترم minUnits/maxUnits/step (دقة 4). مثال: 2.5",
            "example": "2.5"
          },
          "userIdentifier": {
            "type": "string",
            "description": "معرّف المستخدم داخل اللعبة/النظام الخارجي",
            "example": "player123"
          },
          "extraField": {
            "type": "string",
            "description": "حقل إضافي"
          },
          "orderUuid": {
            "type": "object",
            "description": "مفتاح Idempotency (اختياري)"
          }
        },
        "required": [
          "productId",
          "packageId"
        ]
      },
      "PlaceOrderDto": {
        "type": "object",
        "properties": {}
      },
      "CreateDepositDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateDepositStatusDto": {
        "type": "object",
        "properties": {}
      },
      "CreatePaymentMethodDto": {
        "type": "object",
        "properties": {}
      },
      "UpdatePaymentMethodDto": {
        "type": "object",
        "properties": {}
      },
      "CreateTenantDto": {
        "type": "object",
        "properties": {}
      },
      "ProvisionTenantDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateTenantDto": {
        "type": "object",
        "properties": {}
      },
      "AddDomainDto": {
        "type": "object",
        "properties": {}
      },
      "PatchDomainDto": {
        "type": "object",
        "properties": {}
      },
      "UpsertMuhammedDailyDto": {
        "type": "object",
        "properties": {}
      },
      "MuhAddPartyDto": {
        "type": "object",
        "properties": {}
      },
      "MuhUpdatePartyDto": {
        "type": "object",
        "properties": {}
      },
      "MuhUpdateRateDto": {
        "type": "object",
        "properties": {}
      }
    }
  }
}