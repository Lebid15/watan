services:
  postgres:
    image: postgres:15-alpine
    container_name: watan-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: watan
      POSTGRES_USER: watan
      POSTGRES_PASSWORD: changeme
    volumes:
      - /mnt/HC_Volume_103376794/postgres:/var/lib/postgresql/data
    expose:
      - "5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "watan"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7-alpine
    container_name: watan-redis
    restart: unless-stopped
    command: ["redis-server", "--appendonly", "no"]
    expose:
      - "6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  backend:
    build: ./backend
    container_name: watan-backend
    restart: unless-stopped
    user: root
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "wget -q -T 5 -O /dev/null http://127.0.0.1:3000/api/health || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 10s
    environment:
      NODE_ENV: "production"
      PORT: "3000"
      DATABASE_URL: "postgres://watan:changeme@postgres:5432/watan?sslmode=disable"
      REDIS_URL: "redis://redis:6379/0"
      JWT_SECRET: "${JWT_SECRET}"
      PUBLIC_TENANT_BASE_DOMAIN: "wtn4.com"
      DEBUG: "0"
      FEATURE_BILLING_V1: "true"
    expose:
      - "3000"
    volumes:
      - backend_logs:/app/logs
      - /var/run/docker.sock:/var/run/docker.sock
      - ./nginx:/opt/nginx-shared
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      args:
        NEXT_PUBLIC_API_URL: "https://api.wtn4.com/api"
    container_name: watan-frontend
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -q -T 5 -O /dev/null http://127.0.0.1:3001 || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 10s
    environment:
      NODE_ENV: production
      PORT: 3001
      NEXT_PUBLIC_FEATURE_BILLING_V1: "true"
    expose:
      - "3001"
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - frontend_logs:/app/logs

  nginx:
    image: nginx:alpine
    container_name: watan-nginx
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_healthy
    ports:
      - "80:80"
      - "443:443"
    environment:
      MAINTENANCE: ${MAINTENANCE:-off}
      MAINTENANCE_MESSAGE: ${MAINTENANCE_MESSAGE:-"يرجى الانتظار لدينا صيانة على الموقع وسنعود فور الانتهاء."}
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/maintenance.conf:/etc/nginx/conf.d/maintenance.conf:ro
      - ./nginx/maintenance.html:/usr/share/nginx/html/maintenance.html
      - ./nginx/templates-empty:/etc/nginx/templates:ro
      - ./certs:/etc/nginx/certs:ro
      - nginx_logs:/var/log/nginx
      - ./nginx:/opt/nginx-shared:rw
    restart: unless-stopped

  djangoo:
    build: ./djangoo
    container_name: watan-djangoo
    restart: unless-stopped
    env_file:
      - ./djangoo/.env
    environment:
      DJANGO_DEBUG: "0"
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: watan
      POSTGRES_USER: watan
      POSTGRES_PASSWORD: changeme
      REDIS_URL: redis://redis:6379/0
    expose:
      - "8000"
    healthcheck:
      test: ["CMD-SHELL", "wget -q -T 5 -O /dev/null http://127.0.0.1:8000/api-dj/health || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  backend_logs:
  frontend_logs:
  nginx_logs:
