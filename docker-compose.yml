version: '3.9'

services:
  backend:
    build: ./backend
    container_name: watan-backend
    restart: unless-stopped
    healthcheck:
      # Nest global prefix is /api, so health endpoint is /api/health
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      JWT_SECRET: ${JWT_SECRET}
      PUBLIC_TENANT_BASE_DOMAIN: ${PUBLIC_TENANT_BASE_DOMAIN}
    expose:
      - '3000'
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
      - backend_logs:/app/logs

  frontend:
    build:
      context: ./frontend
      args:
        NEXT_PUBLIC_API_URL: http://api.syrz1.com/api
    container_name: watan-frontend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3001"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    environment:
      NODE_ENV: production
      PORT: 3001
      NEXT_PUBLIC_API_URL: http://api.syrz1.com/api
    expose:
      - '3001'
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
      - frontend_logs:/app/logs

  nginx:
    image: nginx:alpine
    container_name: watan-nginx
    depends_on:
      - frontend
      - backend
    ports:
      - '80:80'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_logs:/var/log/nginx
    restart: unless-stopped

  worker:
    build: ./backend
    container_name: watan-worker
    command: ["npm", "run", "start:worker"]
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      JWT_SECRET: ${JWT_SECRET}
      PUBLIC_TENANT_BASE_DOMAIN: ${PUBLIC_TENANT_BASE_DOMAIN}
    depends_on:
      - backend
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
      - backend_logs:/app/logs
    healthcheck:
      test: ["CMD", "echo", "ok"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s

volumes:
  backend_node_modules:
  frontend_node_modules:
  backend_logs:
  frontend_logs:
  nginx_logs:

## Usage:
# 1) Create a .env file (DATABASE_URL, REDIS_URL, JWT_SECRET, etc.)
# 2) docker compose build --pull
# 3) docker compose up -d
# 4) Point DNS (Cloudflare) A/CNAME records:
#      syrz1.com, www.syrz1.com -> VPS IP (frontend via nginx)
#      api.syrz1.com -> VPS IP (backend via nginx)
# Cloudflare Full mode terminates HTTPS; nginx here listens only on :80.
