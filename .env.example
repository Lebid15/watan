# --- Core Backend ---
DATABASE_URL=postgres://watan:***@postgres:5432/watan?sslmode=disable
REDIS_URL=redis://redis:6379/0
JWT_SECRET=change-me-please
PUBLIC_TENANT_BASE_DOMAIN=wtn4.com
AUTO_MIGRATIONS=false
HOST=0.0.0.0
PORT=3000

# --- Bootstrap (disable after first run) ---
INITIAL_ROOT_EMAIL=owner@example.com
INITIAL_ROOT_PASSWORD=ChangeMe123!
BOOTSTRAP_ENABLED=false

# --- Passkeys / WebAuthn ---
RP_ID=syrz1.com
PASSKEYS_STRICT=true

# --- Frontend (build + runtime) ---
NEXT_PUBLIC_API_URL=https://api.syrz1.com/api

# --- Cloudinary (placeholders only) ---
CLOUDINARY_CLOUD_NAME=your_cloud_name
CLOUDINARY_API_KEY=your_api_key
CLOUDINARY_API_SECRET=your_api_secret
# If your lib uses CLOUDINARY_URL:
# CLOUDINARY_URL=cloudinary://API_KEY:API_SECRET@CLOUD_NAME

# --- Email (SMTP) ---
# Choose ONE provider block and place real values (never commit secrets).

# SendGrid example:
# EMAIL_HOST=smtp.sendgrid.net
# EMAIL_PORT=587
# EMAIL_SECURE=false          # true only if using port 465
# EMAIL_USER=apikey           # literal string 'apikey'
# EMAIL_PASS=SG.xxxxxxxx      # your real API key
# EMAIL_FROM="Watan Store <no-reply@watan.store>"
# FRONTEND_URL=https://wtn4.com

# Brevo (Sendinblue) example:
# EMAIL_HOST=smtp-relay.brevo.com
# EMAIL_PORT=587
# EMAIL_SECURE=false          # STARTTLS on 587 (keep false)
# EMAIL_USER=YOUR_SMTP_LOGIN  # e.g. 968ce0001@smtp-brevo.com
# EMAIL_PASS=YOUR_SMTP_PASSWORD
# EMAIL_FROM="Watan Store <no-reply@wtn4.com>"
# FRONTEND_URL=https://wtn4.com

# Notes:
# - Ensure the sender (no-reply@wtn4.com) is verified in the provider dashboard.
# - DKIM/SPF records should be added for wtn4.com to avoid spam.
# - After editing .env on the server: docker compose restart backend (or stop/up) so Nest reloads transporter.
